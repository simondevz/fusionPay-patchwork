{
  "compiler": {
    "version": "0.8.26+commit.8a97fa7a"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_manager",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_owner",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "ERC721IncorrectOwner"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "operator",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "ERC721InsufficientApproval"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "approver",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "ERC721InvalidApprover"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "operator",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "ERC721InvalidOperator"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "ERC721InvalidOwner"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "receiver",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "ERC721InvalidReceiver"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "ERC721InvalidSender"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "ERC721NonexistentToken"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "addr",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "nonce",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "IncorrectNonce"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "addr",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "NotAuthorized"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "addr",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "NotFrozen"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "OwnableInvalidOwner"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "OwnableUnauthorizedAccount"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "approved",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "Approval",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "operator",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "bool",
            "name": "approved",
            "type": "bool",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "ApprovalForAll",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_fromTokenId",
            "type": "uint256",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "_toTokenId",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "BatchMetadataUpdate",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "Frozen",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "Locked",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "MetadataUpdate",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "previousOwner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "OwnershipTransferred",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "to",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "permissions",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "PermissionChange",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "addr",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "SchemaChange",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "Thawed",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "Transfer",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "Unlocked",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "approve"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "balanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "frozen",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getApproved",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getFreezeNonce",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "nonce",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getScopeName",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "pure",
        "type": "function",
        "name": "imageURI",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "operator",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "isApprovedForAll",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "loadAccountNumber",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "loadBank",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "loadEmailAddress",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "loadMetadata",
        "outputs": [
          {
            "internalType": "struct FusionAttestation.Metadata",
            "name": "data",
            "type": "tuple",
            "components": [
              {
                "internalType": "string",
                "name": "bank",
                "type": "string"
              },
              {
                "internalType": "string",
                "name": "emailAddress",
                "type": "string"
              },
              {
                "internalType": "string",
                "name": "orderRef",
                "type": "string"
              },
              {
                "internalType": "address",
                "name": "walletAddress",
                "type": "address"
              },
              {
                "internalType": "string",
                "name": "accountNumber",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "loadOrderRef",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "loadPackedMetadata",
        "outputs": [
          {
            "internalType": "uint256[]",
            "name": "",
            "type": "uint256[]"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "slot",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "loadPackedMetadataSlot",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "loadWalletAddress",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "locked",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "name",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "ownerOf",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "struct FusionAttestation.Metadata",
            "name": "data",
            "type": "tuple",
            "components": [
              {
                "internalType": "string",
                "name": "bank",
                "type": "string"
              },
              {
                "internalType": "string",
                "name": "emailAddress",
                "type": "string"
              },
              {
                "internalType": "string",
                "name": "orderRef",
                "type": "string"
              },
              {
                "internalType": "address",
                "name": "walletAddress",
                "type": "address"
              },
              {
                "internalType": "string",
                "name": "accountNumber",
                "type": "string"
              }
            ]
          }
        ],
        "stateMutability": "pure",
        "type": "function",
        "name": "packMetadata",
        "outputs": [
          {
            "internalType": "uint256[]",
            "name": "slots",
            "type": "uint256[]"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "renounceOwnership"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "safeTransferFrom"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "bytes",
            "name": "_data",
            "type": "bytes"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "safeTransferFrom"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "nonce",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "safeTransferFromWithFreezeNonce"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "bytes",
            "name": "data",
            "type": "bytes"
          },
          {
            "internalType": "uint256",
            "name": "nonce",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "safeTransferFromWithFreezeNonce"
      },
      {
        "inputs": [],
        "stateMutability": "pure",
        "type": "function",
        "name": "schema",
        "outputs": [
          {
            "internalType": "struct IPatchworkMetadata.MetadataSchema",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "uint256",
                "name": "version",
                "type": "uint256"
              },
              {
                "internalType": "struct IPatchworkMetadata.MetadataSchemaEntry[]",
                "name": "entries",
                "type": "tuple[]",
                "components": [
                  {
                    "internalType": "uint256",
                    "name": "id",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "permissionId",
                    "type": "uint256"
                  },
                  {
                    "internalType": "enum IPatchworkMetadata.FieldType",
                    "name": "fieldType",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint256",
                    "name": "fieldCount",
                    "type": "uint256"
                  },
                  {
                    "internalType": "enum IPatchworkMetadata.FieldVisibility",
                    "name": "visibility",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint256",
                    "name": "slot",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "offset",
                    "type": "uint256"
                  },
                  {
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "pure",
        "type": "function",
        "name": "schemaURI",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "operator",
            "type": "address"
          },
          {
            "internalType": "bool",
            "name": "approved",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setApprovalForAll"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "frozen_",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setFrozen"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "locked_",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setLocked"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "permissions",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setPermissions"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "accountNumber",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "storeAccountNumber"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "bank",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "storeBank"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "emailAddress",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "storeEmailAddress"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "struct FusionAttestation.Metadata",
            "name": "data",
            "type": "tuple",
            "components": [
              {
                "internalType": "string",
                "name": "bank",
                "type": "string"
              },
              {
                "internalType": "string",
                "name": "emailAddress",
                "type": "string"
              },
              {
                "internalType": "string",
                "name": "orderRef",
                "type": "string"
              },
              {
                "internalType": "address",
                "name": "walletAddress",
                "type": "address"
              },
              {
                "internalType": "string",
                "name": "accountNumber",
                "type": "string"
              }
            ]
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "storeMetadata"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "orderRef",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "storeOrderRef"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "uint256[]",
            "name": "data",
            "type": "uint256[]"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "storePackedMetadata"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "slot",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "data",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "storePackedMetadataSlot"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "walletAddress",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "storeWalletAddress"
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "interfaceID",
            "type": "bytes4"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "supportsInterface",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "symbol",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "tokenURI",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "transferFrom"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "nonce",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "transferFromWithFreezeNonce"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "transferOwnership"
      },
      {
        "inputs": [
          {
            "internalType": "uint256[]",
            "name": "slots",
            "type": "uint256[]"
          }
        ],
        "stateMutability": "pure",
        "type": "function",
        "name": "unpackMetadata",
        "outputs": [
          {
            "internalType": "struct FusionAttestation.Metadata",
            "name": "data",
            "type": "tuple",
            "components": [
              {
                "internalType": "string",
                "name": "bank",
                "type": "string"
              },
              {
                "internalType": "string",
                "name": "emailAddress",
                "type": "string"
              },
              {
                "internalType": "string",
                "name": "orderRef",
                "type": "string"
              },
              {
                "internalType": "address",
                "name": "walletAddress",
                "type": "address"
              },
              {
                "internalType": "string",
                "name": "accountNumber",
                "type": "string"
              }
            ]
          }
        ]
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "approve(address,uint256)": {
          "details": "See {IERC721-approve}."
        },
        "balanceOf(address)": {
          "details": "See {IERC721-balanceOf}."
        },
        "frozen(uint256)": {
          "details": "See {IPatchwork721-frozen}"
        },
        "getApproved(uint256)": {
          "details": "See {IERC721-getApproved}."
        },
        "getFreezeNonce(uint256)": {
          "details": "See {IPatchwork721-getFreezeNonce}"
        },
        "getScopeName()": {
          "details": "See {IPatchwork721-getScopeName}"
        },
        "imageURI(uint256)": {
          "params": {
            "tokenId": "ID of the token"
          },
          "returns": {
            "_0": "string the image URI"
          }
        },
        "isApprovedForAll(address,address)": {
          "details": "See {IERC721-isApprovedForAll}."
        },
        "loadPackedMetadata(uint256)": {
          "details": "See {IPatchwork721-loadPackedMetadata}"
        },
        "loadPackedMetadataSlot(uint256,uint256)": {
          "details": "See {IPatchwork721-loadPackedMetadataSlot}"
        },
        "locked(uint256)": {
          "details": "See {IPatchwork721-locked}"
        },
        "name()": {
          "details": "See {IERC721Metadata-name}."
        },
        "owner()": {
          "details": "Returns the address of the current owner."
        },
        "ownerOf(uint256)": {
          "details": "See {IERC721-ownerOf}."
        },
        "renounceOwnership()": {
          "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
        },
        "safeTransferFrom(address,address,uint256)": {
          "details": "See {IERC721-safeTransferFrom}."
        },
        "safeTransferFromWithFreezeNonce(address,address,uint256,bytes,uint256)": {
          "details": "reverts if the token is not frozen or if the current freeze nonce does not match the provided nonceSee {IERC721-safeTransferFrom}."
        },
        "safeTransferFromWithFreezeNonce(address,address,uint256,uint256)": {
          "details": "reverts if the token is not frozen or if the current freeze nonce does not match the provided nonceSee {IERC721-safeTransferFrom}."
        },
        "schema()": {
          "returns": {
            "_0": "MetadataSchema the metadata schema"
          }
        },
        "schemaURI()": {
          "returns": {
            "_0": "string the URI of the schema"
          }
        },
        "setApprovalForAll(address,bool)": {
          "details": "See {IERC721-setApprovalForAll}."
        },
        "setFrozen(uint256,bool)": {
          "details": "See {IPatchwork721-setFrozen}"
        },
        "setLocked(uint256,bool)": {
          "details": "See {IPatchwork721-setLocked}"
        },
        "setPermissions(address,uint256)": {
          "details": "See {IPatchwork721-setPermissions}"
        },
        "storePackedMetadata(uint256,uint256[])": {
          "details": "See {IPatchwork721-storePackedMetadata}"
        },
        "storePackedMetadataSlot(uint256,uint256,uint256)": {
          "details": "See {IPatchwork721-storePackedMetadataSlot}"
        },
        "supportsInterface(bytes4)": {
          "details": "See {IERC165-supportsInterface}"
        },
        "symbol()": {
          "details": "See {IERC721Metadata-symbol}."
        },
        "tokenURI(uint256)": {
          "details": "See {IERC721Metadata-tokenURI}."
        },
        "transferFrom(address,address,uint256)": {
          "details": "See {IERC721-transferFrom}."
        },
        "transferFromWithFreezeNonce(address,address,uint256,uint256)": {
          "details": "reverts if the token is not frozen or if the current freeze nonce does not match the provided nonceSee {IERC721-transferFrom}."
        },
        "transferOwnership(address)": {
          "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "imageURI(uint256)": {
          "notice": "Returns the URI of the image associated with the given token ID"
        },
        "safeTransferFromWithFreezeNonce(address,address,uint256,bytes,uint256)": {
          "notice": "transfers a token with a known freeze nonce"
        },
        "safeTransferFromWithFreezeNonce(address,address,uint256,uint256)": {
          "notice": "transfers a token with a known freeze nonce"
        },
        "schema()": {
          "notice": "Returns the metadata schema"
        },
        "schemaURI()": {
          "notice": "Returns the URI of the schema"
        },
        "transferFromWithFreezeNonce(address,address,uint256,uint256)": {
          "notice": "transfers a token with a known freeze nonce"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@openzeppelin/=lib/openzeppelin-contracts/",
      "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
      "@patchwork/=lib/patchwork/src/",
      "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
      "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
      "forge-std/=lib/forge-std/src/",
      "lib/=lib/",
      "openzeppelin-contracts/=lib/openzeppelin-contracts/",
      "patchwork/=lib/patchwork/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "compilationTarget": {
      "src/FusionAttestation.sol": "FusionAttestation"
    },
    "evmVersion": "paris",
    "libraries": {}
  },
  "sources": {
    "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
      "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
      "urls": [
        "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
        "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
      ],
      "license": "MIT"
    },
    "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
      "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
      "urls": [
        "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
        "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
      ],
      "license": "MIT"
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
      "keccak256": "0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784",
      "urls": [
        "bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd",
        "dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS"
      ],
      "license": "MIT"
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
      "keccak256": "0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4",
      "urls": [
        "bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7",
        "dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n"
      ],
      "license": "MIT"
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
      "keccak256": "0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49",
      "urls": [
        "bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22",
        "dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i"
      ],
      "license": "MIT"
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
      "keccak256": "0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1",
      "urls": [
        "bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02",
        "dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"
      ],
      "license": "MIT"
    },
    "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
      "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
      "urls": [
        "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
        "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
      ],
      "license": "MIT"
    },
    "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
      "keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
      "urls": [
        "bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
        "dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
      ],
      "license": "MIT"
    },
    "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
      "keccak256": "0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133",
      "urls": [
        "bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8",
        "dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"
      ],
      "license": "MIT"
    },
    "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
      "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
      "urls": [
        "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
        "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
      ],
      "license": "MIT"
    },
    "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
      "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
      "urls": [
        "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
        "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
      ],
      "license": "MIT"
    },
    "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
      "keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
      "urls": [
        "bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
        "dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
      ],
      "license": "MIT"
    },
    "lib/patchwork/src/Patchwork721.sol": {
      "keccak256": "0x2751a8b4e365a7ffbc8694bddc00f5383daff53137225bf22b9d385804a8ebfa",
      "urls": [
        "bzz-raw://640fd804712a95eeba8cfe02dfe598907c94b69c2dc02ee71e805e09177882cb",
        "dweb:/ipfs/QmW8XTDbccwHSvMwkYSHEV8nn2jVkwBynvHhabKjsUA7hQ"
      ],
      "license": "MIT"
    },
    "lib/patchwork/src/PatchworkUtils.sol": {
      "keccak256": "0x8e870efe8f87b1353c3ff284d2a18b45467f7d81fdb7566086a0f5fcb0210673",
      "urls": [
        "bzz-raw://d619338c92df55841bc772037f1ef08c778517e5fb5aeae536894af3c4445dae",
        "dweb:/ipfs/QmUsvQ2BQwjb4LFWFcSTb3LVdxNC24mbpxnj8idHzEEVk9"
      ],
      "license": "MIT"
    },
    "lib/patchwork/src/interfaces/IERC4906.sol": {
      "keccak256": "0xace53ff0f065347c6522fed54cb31ffa23aaf3a7e10b8c939a7ede1587ef1769",
      "urls": [
        "bzz-raw://2ba0650e16a80b0c2554f61fd315cdccbaff0a3220eef1b541407aaa5269f9bf",
        "dweb:/ipfs/QmXDdicyoDdhVvBCbqfxkbaif9KwmVTXBmdd5mnnRv4VXg"
      ],
      "license": "CC0-1.0"
    },
    "lib/patchwork/src/interfaces/IERC5192.sol": {
      "keccak256": "0x4611a262674d44255c1bb250b27cb13ac0fa041fd09b276ed77f89ea5f8bd6f7",
      "urls": [
        "bzz-raw://a6faac2fe51154c3525d678a728b87f764e57558fab09659d0a2cf44b5ca0ce3",
        "dweb:/ipfs/QmZNasRXARKoAjhyfMLJzZA7t8B2Gcp78gNjGnWGYzuS5M"
      ],
      "license": "CC0-1.0"
    },
    "lib/patchwork/src/interfaces/IPatchwork721.sol": {
      "keccak256": "0xec433d9a6e760ee6bcbd1775f52fe673076370b6313b9a379da48b7cac25deb6",
      "urls": [
        "bzz-raw://479ad583c8b3e2e5033f931b730edae24cd7259ba882afaf1948f49d8ab756db",
        "dweb:/ipfs/QmNevJS7s67nhXuqzhnNqDk8XVAYAMB5AAScyxyvTkAySj"
      ],
      "license": "MIT"
    },
    "lib/patchwork/src/interfaces/IPatchworkProtocol.sol": {
      "keccak256": "0x3bbb294f93b2989c683d24f79173050f967c430e0cb50bac59a1f862bff64861",
      "urls": [
        "bzz-raw://e83e3f72d05036d018b7212c8c6c50fb4abdfb2ea3f4a5ced3a997b24b0a812e",
        "dweb:/ipfs/QmWEXPBzHyxcEWb4vDBbc9KNG9rWbsDfSS2uQURxwEyJ3R"
      ],
      "license": "MIT"
    },
    "lib/patchwork/src/interfaces/IPatchworkScoped.sol": {
      "keccak256": "0xac53e534b7dd1208948ccab869a71cf3840834a2a7abea8420f15708f7d1d842",
      "urls": [
        "bzz-raw://e3ec2a54430f5c5483e8ebe99d40d99e251d86691543c129675298078c083741",
        "dweb:/ipfs/Qma4eX2Vq5W6C2ovkfyAKRVrhXTWM42xzBeB5ZKYUV3bTB"
      ],
      "license": "MIT"
    },
    "src/FusionAttestation.sol": {
      "keccak256": "0xb2153ca91209f7f69da775950bf22706ce12bfcdd3af223007867926249912b1",
      "urls": [
        "bzz-raw://4996c73507df645e57187c457ecac30ffaf654f34d2358c24c1b48405123e6dd",
        "dweb:/ipfs/QmRpGwMXHSevSWfgDV3LbJLEaQjCihrYuzPAENuSeXVquM"
      ],
      "license": "UNLICENSED"
    }
  },
  "version": 1
}
